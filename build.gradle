buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://maven.xillio.com/artifactory/libs-release' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: 'com.diffplug.eclipse.apt', name: 'com.diffplug.eclipse.apt.gradle.plugin', version: '3.41.1'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
// DO NOT CHANGE ABOVE
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.diffplug.eclipse.apt'

group = 'com.onewhohears.dscombat'
archivesBaseName = 'dscombat-1.19.2'
version = '0.9.3-test.3'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
    runs {
        client {
        	taskName 'runClient'
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dscombat'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                dscombat {
                    source sourceSets.main
                }
            }
        }
        
        client2 {
        	parent runs.client
        	taskName 'runClient2'
        	workingDirectory project.file('run')
        	property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dscombat'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg '--username=StupidIdiot'
            mods {
                dscombat {
                    source sourceSets.main
                }
            }
        }
        
        client3 {
        	parent runs.client
        	taskName 'runClient3'
        	workingDirectory project.file('run')
        	property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dscombat'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg '--username=LunaticDonkey'
            mods {
                dscombat {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dscombat'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                dscombat {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dscombat'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                dscombat {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'dscombat', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                dscombat {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven { url "https://cursemaven.com" }
	// temporarily using a free maven repo until I publish to curse forge
	maven { url "https://repo.repsy.io/mvn/1whohears/minigames" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.0'
    implementation fg.deobf("curse.maven:modernfix-790626:4792392")
    // https://github.com/1whohears/CustomMiniGames
    implementation fg.deobf("com.1whohears.minigames:minigames-1.19.2:0.0.6")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.2"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.3.2")) {
        jarJar.ranged(it, "[0.3.2,)")
    }
}

mixin {
	add sourceSets.main, 'mixins.dscombat.refmap.json'
	config 'mixins.dscombat.json'
}

jar {
	manifest {
		attributes([
        	"Specification-Title"     : "Diamond Star Combat",
			"Specification-Vendor"    : "1whohears",
			"Specification-Version"   : version, 
			"Implementation-Title"    : "Diamond Star Combat",
			"Implementation-Version"  : version,
			"Implementation-Vendor"   : "1whohears",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
	it.exclude '**/*.bak'
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
